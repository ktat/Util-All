package Util::All::Plugin::Xml;

use warnings;
use strict;

use Util::Any -Base, -Pluggable;

sub utils {
  {
  '-xml' => [
    [
      'XML::Simple',
      '',
      {
        '-select' => [],
        'to_xml' => sub {
            my($pkg, $class, $func, $args, $kind_args) = @_;
            $$args{'KeyAttr'} ||= $$kind_args{'key_attr'} || $$args{'key_attr'};
            sub {
                XML::Simple::XMLout(shift @_, %$args);
            }
            ;
        },
        'from_xml' => sub {
            my($pkg, $class, $func, $args, $kind_args) = @_;
            local $XML::Simple::XML_SIMPLE_PREFERRED_PARSER = $$kind_args{'parser'} || $$args{'parser'} || 'XML::Parser';
            $$args{'Forcearray'} ||= $$kind_args{'force_array'} || $$args{'force_array'};
            $$args{'KeyAttr'} ||= $$kind_args{'key_attr'} || $$args{'key_attr'};
            sub {
                XML::Simple::XMLin(shift @_, %$args);
            }
            ;
        }
      }
    ]
  ]
}
;
}

=head1 NAME

Util::All -  (alpha software) collect perl utilities and group them by appropriate kind.

=cut

our $VERSION = '0.01';

=head1 SYNOPSIS

=head1 EXPORT

functions which C<*> follows are generated by the way like Sub::Exporter.
see L<Util::Any/"USE Sub::Exporter's GENERATOR WAY">

=head2 -xml

=head3 to_xml *

  sub {
      my ( $pkg, $class, $func, $args, $kind_args ) = @_;
      $args->{KeyAttr} ||= $kind_args->{key_attr} || $args->{key_attr};
      sub {
          XML::Simple::XMLout( shift, %$args );
        }
    }


=head3 from_xml *

  sub {
      my ( $pkg, $class, $func, $args, $kind_args ) = @_;
      local $XML::Simple::XML_SIMPLE_PREFERRED_PARSER =
           $kind_args->{parser}
        || $args->{parser}
        || 'XML::Parser';
      $args->{Forcearray} ||= $kind_args->{force_array} || $args->{force_array};
      $args->{KeyAttr}    ||= $kind_args->{key_attr}    || $args->{key_attr};
      sub {
          XML::Simple::XMLin( shift, %$args );
        }
    }




=head1 AUTHOR

Ktat, C<< <ktat at cpan.org> >>

=head1 REPOSITORY

Util::All is hosted at github.

L<http://github.com/ktat/Util-All>

=head1 SUPPORT

You can find documentation for this module with the perldoc command.

 perldoc Util::All::Xml

You can also look for information at:

=over 4

=item * RT: CPAN's request tracker

L<http://rt.cpan.org/NoAuth/Bugs.html?Dist=Util-All>

=item * AnnoCPAN: Annotated CPAN documentation

L<http://annocpan.org/dist/Util-All>

=item * CPAN Ratings

L<http://cpanratings.perl.org/d/Util-All>

=item * Search CPAN

L<http://search.cpan.org/dist/Util-All/>

=back

=head1 ACKNOWLEDGEMENTS

Thanks to All Perl Users.
When I find useful code, I write it here as memo.

=head1 SEE ALSO

=over 4

=item L<Util::Any>

This module is based on Util::Any.
Util::Any helps you to create your own utility module.

=back

=head1 COPYRIGHT & LICENSE

Copyright 2009-2010 Ktat, all rights reserved.

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl itself.

=cut

1;